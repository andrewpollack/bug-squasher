{"ast":null,"code":"var _jsxFileName = \"/Users/andrewpk/Desktop/newProj/bug-squasher/client/src/components/CreateTask/CreateTask.js\";\nimport React from \"react\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nexport default class CreateTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTaskDescription = this.onChangeTaskDescription.bind(this);\n    this.onChangeTaskResponsible = this.onChangeTaskResponsible.bind(this);\n    this.onChangeTaskPriority = this.onChangeTaskPriority.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      taskDescription: '',\n      taskResponsible: '',\n      taskPriority: 'Low',\n      taskComplete: false,\n      taskRecentlyAdded: false,\n      taskSubFailed: false\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.taskDescription.trim().length || !this.state.taskResponsible.trim().length) {\n      this.setState({\n        taskRecentlyAdded: false,\n        taskSubFailed: true\n      });\n      return;\n    }\n\n    const newTask = {\n      taskDescription: this.state.taskDescription,\n      taskResponsible: this.state.taskResponsible,\n      taskPriority: this.state.taskPriority,\n      taskComplete: this.state.taskComplete\n    };\n    axios.post('http://localhost:4000/bsDb/task/add', newTask).then(res => {\n      this.setState({\n        taskDescription: '',\n        taskResponsible: '',\n        taskPriority: 'Low',\n        taskComplete: false,\n        taskRecentlyAdded: true,\n        taskSubFailed: false\n      });\n    });\n  }\n\n  onChangeTaskDescription(e) {\n    this.setState({\n      taskDescription: e.target.value,\n      taskRecentlyAdded: false,\n      taskSubFailed: false\n    });\n  }\n\n  onChangeTaskResponsible(e) {\n    this.setState({\n      taskResponsible: e.target.value,\n      taskRecentlyAdded: false,\n      taskSubFailed: false\n    });\n  }\n\n  onChangeTaskPriority(e) {\n    this.setState({\n      taskPriority: e.target.value,\n      taskRecentlyAdded: false,\n      taskSubFailed: false\n    });\n  }\n  /**\n   * Gives feedback if a task has been recently added/refused\n   */\n\n\n  addResponseForSubmission() {\n    if (this.state.taskRecentlyAdded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Task successfully submitted!\");\n    } else if (this.state.taskSubFailed) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Submission failed.  Please leave no boxes blank.\");\n    } else {\n      return;\n    }\n  }\n  /**\n   * Returns a form-check-input object for each of the possible priorities for the tasks.\n   */\n\n\n  getPriorityListOptions() {\n    var priorities = [\"Low\", \"Medium\", \"High\"];\n    var endOut = [];\n\n    for (var i = 0; i < priorities.length; i++) {\n      endOut.push(React.createElement(\"div\", {\n        key: priorities[i],\n        className: \"form-check form-check-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"priorityOptions\",\n        id: \"priority\" + priorities[i],\n        value: priorities[i],\n        checked: this.state.taskPriority === priorities[i],\n        onChange: this.onChangeTaskPriority,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, priorities[i])));\n    }\n\n    return endOut;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Create New Task\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.taskDescription,\n      onChange: this.onChangeTaskDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Responsible: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.taskResponsible,\n      onChange: this.onChangeTaskResponsible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.getPriorityListOptions()), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Task\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), this.addResponseForSubmission()));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewpk/Desktop/newProj/bug-squasher/client/src/components/CreateTask/CreateTask.js"],"names":["React","axios","defaults","withCredentials","CreateTask","Component","constructor","props","onChangeTaskDescription","bind","onChangeTaskResponsible","onChangeTaskPriority","onSubmit","state","taskDescription","taskResponsible","taskPriority","taskComplete","taskRecentlyAdded","taskSubFailed","e","preventDefault","trim","length","setState","newTask","post","then","res","target","value","addResponseForSubmission","getPriorityListOptions","priorities","endOut","i","push","render","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport default class CreateTask extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTaskDescription = this.onChangeTaskDescription.bind(this);\n        this.onChangeTaskResponsible = this.onChangeTaskResponsible.bind(this);\n        this.onChangeTaskPriority = this.onChangeTaskPriority.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            taskDescription: '',\n            taskResponsible: '',\n            taskPriority: 'Low',\n            taskComplete: false,\n            taskRecentlyAdded: false,\n            taskSubFailed: false\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(!this.state.taskDescription.trim().length ||\n           !this.state.taskResponsible.trim().length) {\n            this.setState( {\n                taskRecentlyAdded: false,\n                taskSubFailed: true\n            });\n            return;\n        }\n\n        const newTask = {\n            taskDescription: this.state.taskDescription,\n            taskResponsible: this.state.taskResponsible,\n            taskPriority: this.state.taskPriority,\n            taskComplete: this.state.taskComplete\n        };\n        axios.post('http://localhost:4000/bsDb/task/add', newTask)\n            .then(\n                res => {\n                    this.setState( {\n                        taskDescription: '',\n                        taskResponsible: '',\n                        taskPriority: 'Low',\n                        taskComplete: false,\n                        taskRecentlyAdded: true,\n                        taskSubFailed: false\n                    });\n            });\n    }\n\n    onChangeTaskDescription(e) {\n        this.setState({\n            taskDescription: e.target.value,\n            taskRecentlyAdded: false,\n            taskSubFailed: false\n        });\n    }\n\n    onChangeTaskResponsible(e) {\n        this.setState({\n            taskResponsible: e.target.value,\n            taskRecentlyAdded: false,\n            taskSubFailed: false\n        });\n    }\n\n    onChangeTaskPriority(e) {\n        this.setState({\n            taskPriority: e.target.value,\n            taskRecentlyAdded: false,\n            taskSubFailed: false\n        });\n    }\n\n    /**\n     * Gives feedback if a task has been recently added/refused\n     */\n    addResponseForSubmission() {\n       if(this.state.taskRecentlyAdded) {\n           return (\n            <div className=\"alert alert-success\" role=\"alert\">\n                Task successfully submitted!\n            </div>\n           );\n       }\n       else if(this.state.taskSubFailed) {\n           return (\n           <div className=\"alert alert-danger\" role=\"alert\">\n                Submission failed.  Please leave no boxes blank.\n            </div>\n            );\n       }\n       else {\n           return;\n       }        \n    }\n\n    /**\n     * Returns a form-check-input object for each of the possible priorities for the tasks.\n     */\n    getPriorityListOptions() {\n        var priorities = [\"Low\", \"Medium\", \"High\"];\n        var endOut = [];\n        \n        for (var i = 0; i < priorities.length; i++) {\n            endOut.push(\n                <div key={priorities[i]} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"priorityOptions\"\n                            id={\"priority\" + priorities[i]}\n                            value={priorities[i]}\n                            checked={this.state.taskPriority === priorities[i]}\n                            onChange={this.onChangeTaskPriority}\n                            />\n                    <label className=\"form-check-label\">{priorities[i]}</label>\n                </div>\n            );\n        }\n        return endOut;\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 15}}>\n                <h3>Create New Task</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.taskDescription}\n                                onChange={this.onChangeTaskDescription} \n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input  type=\"text\"\n                                className=\"form-control\"\n                                value={this.state.taskResponsible}\n                                onChange={this.onChangeTaskResponsible} \n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        {this.getPriorityListOptions()}\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Task\" className=\"btn btn-primary\" />\n                    </div>\n                    {this.addResponseForSubmission()}\n                </form>\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}