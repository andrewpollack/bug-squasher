{"ast":null,"code":"var _jsxFileName = \"/Users/andrewpk/Desktop/newProj/bug-squasher/client/src/components/EditTask/EditTask.js\";\nimport React from \"react\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nexport default class EditTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTaskDescription = this.onChangeTaskDescription.bind(this);\n    this.onChangeTaskResponsible = this.onChangeTaskResponsible.bind(this);\n    this.onChangeTaskPriority = this.onChangeTaskPriority.bind(this);\n    this.onChangeTaskCompleted = this.onChangeTaskCompleted.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      taskDescription: '',\n      taskResponsible: '',\n      taskPriority: '',\n      taskComplete: false,\n      deleteTask: false\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.deleteTask) {\n      axios.delete('http://localhost:4000/bsDb/task/delete/' + this.props.match.params.id).then(res => {\n        //console.log(res.data)\n        this.props.history.push('/');\n        return;\n      });\n    }\n\n    if (!this.state.taskDescription.trim().length || !this.state.taskResponsible.trim().length) {\n      this.setState({\n        taskRecentlyAdded: false,\n        taskSubFailed: true\n      });\n      return;\n    }\n\n    const updatedTask = {\n      taskDescription: this.state.taskDescription,\n      taskResponsible: this.state.taskResponsible,\n      taskPriority: this.state.taskPriority,\n      taskComplete: this.state.taskComplete\n    };\n    axios.post('http://localhost:4000/bsDb/task/update/' + this.props.match.params.id, updatedTask).then(res => {\n      //console.log(res.data);\n      this.props.history.push('/');\n      return;\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/bsDb/task/' + this.props.match.params.id).then(response => {\n      this.setState({\n        taskDescription: response.data.taskDescription,\n        taskResponsible: response.data.taskResponsible,\n        taskPriority: response.data.taskPriority,\n        taskComplete: response.data.taskComplete\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onChangeTaskDescription(e) {\n    this.setState({\n      taskDescription: e.target.value\n    });\n  }\n\n  onChangeTaskResponsible(e) {\n    this.setState({\n      taskResponsible: e.target.value\n    });\n  }\n\n  onChangeTaskPriority(e) {\n    this.setState({\n      taskPriority: e.target.value\n    });\n  }\n\n  onChangeTaskCompleted(e) {\n    this.setState({\n      taskComplete: !this.state.taskComplete\n    });\n  }\n\n  deleteClick() {\n    this.setState({\n      deleteTask: true\n    });\n  }\n  /**\n   * Returns a form-check-input object for each of the possible priorities for the tasks.\n   */\n\n\n  getPriorityListOptions() {\n    var priorities = [\"Low\", \"Medium\", \"High\"];\n    var endOut = [];\n\n    for (var i = 0; i < priorities.length; i++) {\n      endOut.push(React.createElement(\"div\", {\n        key: priorities[i],\n        className: \"form-check form-check-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"priorityOptions\",\n        id: \"priority\" + priorities[i],\n        value: priorities[i],\n        checked: this.state.taskPriority === priorities[i],\n        onChange: this.onChangeTaskPriority,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, priorities[i])));\n    }\n\n    return endOut;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Update Task:\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.taskDescription,\n      onChange: this.onChangeTaskDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Description: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.taskResponsible,\n      onChange: this.onChangeTaskResponsible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.getPriorityListOptions()), React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"form-check-input\",\n      id: \"completedCheckbox\",\n      name: \"completedCheckbox\",\n      onChange: this.onChangeTaskCompleted,\n      checked: this.state.taskComplete,\n      value: this.state.taskComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"completedCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Completed\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Update Task\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Delete Task\",\n      className: \"btn btn-danger\",\n      onClick: this.deleteClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewpk/Desktop/newProj/bug-squasher/client/src/components/EditTask/EditTask.js"],"names":["React","axios","defaults","withCredentials","EditTask","Component","constructor","props","onChangeTaskDescription","bind","onChangeTaskResponsible","onChangeTaskPriority","onChangeTaskCompleted","onSubmit","state","taskDescription","taskResponsible","taskPriority","taskComplete","deleteTask","e","preventDefault","delete","match","params","id","then","res","history","push","trim","length","setState","taskRecentlyAdded","taskSubFailed","updatedTask","post","componentDidMount","get","response","data","catch","error","console","log","target","value","deleteClick","getPriorityListOptions","priorities","endOut","i","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nexport default class EditTask extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTaskDescription = this.onChangeTaskDescription.bind(this);\n        this.onChangeTaskResponsible = this.onChangeTaskResponsible.bind(this);\n        this.onChangeTaskPriority = this.onChangeTaskPriority.bind(this);\n        this.onChangeTaskCompleted = this.onChangeTaskCompleted.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            taskDescription: '',\n            taskResponsible: '',\n            taskPriority: '',\n            taskComplete: false,\n            deleteTask: false,\n        }\n        \n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.deleteTask) {\n            axios.delete('http://localhost:4000/bsDb/task/delete/'+this.props.match.params.id)\n            .then(res => {\n                //console.log(res.data)\n                this.props.history.push('/');  \n                return;\n            });     \n        }\n\n        if(!this.state.taskDescription.trim().length ||\n           !this.state.taskResponsible.trim().length) {\n            this.setState( {\n                taskRecentlyAdded: false,\n                taskSubFailed: true\n            });\n            return;\n        }\n\n        const updatedTask = {\n            taskDescription: this.state.taskDescription,\n            taskResponsible: this.state.taskResponsible,\n            taskPriority: this.state.taskPriority,\n            taskComplete: this.state.taskComplete\n        };\n        axios.post('http://localhost:4000/bsDb/task/update/'+this.props.match.params.id, updatedTask)\n            .then( res =>  {\n                //console.log(res.data);\n                this.props.history.push('/'); \n                return;       \n            });     \n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/bsDb/task/' + this.props.match.params.id)\n            .then(response => {\n                this.setState( {\n                    taskDescription: response.data.taskDescription,\n                    taskResponsible: response.data.taskResponsible,\n                    taskPriority: response.data.taskPriority,\n                    taskComplete: response.data.taskComplete,\n                })\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    onChangeTaskDescription(e) {\n        this.setState({\n            taskDescription: e.target.value,\n        });\n    }\n\n    onChangeTaskResponsible(e) {\n        this.setState({\n            taskResponsible: e.target.value,\n        });\n    }\n\n    onChangeTaskPriority(e) {\n        this.setState({\n            taskPriority: e.target.value,\n        });\n    }\n\n    onChangeTaskCompleted(e) {\n        this.setState({\n            taskComplete: !this.state.taskComplete,\n        });\n    }\n\n    deleteClick() {\n        this.setState({\n            deleteTask: true,\n        });\n    }\n\n    /**\n     * Returns a form-check-input object for each of the possible priorities for the tasks.\n     */\n    getPriorityListOptions() {\n        var priorities = [\"Low\", \"Medium\", \"High\"];\n        var endOut = [];\n        \n        for (var i = 0; i < priorities.length; i++) {\n            endOut.push(\n                <div key={priorities[i]} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"priorityOptions\"\n                            id={\"priority\" + priorities[i]}\n                            value={priorities[i]}\n                            checked={this.state.taskPriority === priorities[i]}\n                            onChange={this.onChangeTaskPriority}\n                            />\n                    <label className=\"form-check-label\">{priorities[i]}</label>\n                </div>\n            );\n        }\n        return endOut;\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Update Task:</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               value={this.state.taskDescription}\n                               onChange={this.onChangeTaskDescription}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               value={this.state.taskResponsible}\n                               onChange={this.onChangeTaskResponsible}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        {this.getPriorityListOptions()}\n                    </div>\n                    <div className=\"form-check\">\n                        <input type=\"checkbox\"\n                               className=\"form-check-input\"\n                               id=\"completedCheckbox\"\n                               name=\"completedCheckbox\"\n                               onChange={this.onChangeTaskCompleted}\n                               checked={this.state.taskComplete}\n                               value={this.state.taskComplete}\n                               />\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                            Completed\n                        </label>\n                    </div>\n                    <br />\n                    <div className=\"form-row\">\n                        <div className=\"col-auto\">\n                            <input type=\"submit\" value=\"Update Task\" className=\"btn btn-primary\" />\n                        </div>\n                        <div className=\"col-auto\">\n                            <input type=\"submit\" value=\"Delete Task\" className=\"btn btn-danger\" onClick={this.deleteClick.bind(this)} />\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}